# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - TodoApp.WebApp/Client
      - Terraform
      - Script
      - azure-pipelines-build-deploy-web-frontend.yml
      - azure-pipelines-for-terraform.yml

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task : PublishBuildArtifacts@1

- task: DotNetCoreCLI@2
  displayName: new tool manifest
  inputs:
    command: 'custom'
    custom: 'new'
    arguments: 'tool-manifest'
- task: DotNetCoreCLI@2
  displayName: Install dotnet ef
  inputs:
    command: 'custom'
    custom: 'tool'
    arguments: 'install dotnet-ef'
- task: DotNetCoreCLI@2
  displayName: Create SQL Scripts
  inputs:
    command: 'custom'
    custom: 'ef '
    arguments: migrations script --output $(Build.SourcesDirectory)/SQL/migrate-db-$(Build.BuildId).sql --idempotent --project $(Build.SourcesDirectory)/TodoApp.WebApp/TodoApp.WebApp.csproj --context ToDoAppContext

- task: PublishBuildArtifacts@1
  displayName: copy script to artifact
  inputs:
    PathtoPublish: $(Build.SourcesDirectory)/SQL/migrate-db-$(Build.BuildId).sql
    ArtifactName: MigrationScript

